# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ItemIphonexBody1(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, store_id: int=None, price: float=None):  # noqa: E501
        """ItemIphonexBody1 - a model defined in Swagger

        :param store_id: The store_id of this ItemIphonexBody1.  # noqa: E501
        :type store_id: int
        :param price: The price of this ItemIphonexBody1.  # noqa: E501
        :type price: float
        """
        self.swagger_types = {
            'store_id': int,
            'price': float
        }

        self.attribute_map = {
            'store_id': 'store_id',
            'price': 'price'
        }
        self._store_id = store_id
        self._price = price

    @classmethod
    def from_dict(cls, dikt) -> 'ItemIphonexBody1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The item_Iphonex_body_1 of this ItemIphonexBody1.  # noqa: E501
        :rtype: ItemIphonexBody1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def store_id(self) -> int:
        """Gets the store_id of this ItemIphonexBody1.


        :return: The store_id of this ItemIphonexBody1.
        :rtype: int
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id: int):
        """Sets the store_id of this ItemIphonexBody1.


        :param store_id: The store_id of this ItemIphonexBody1.
        :type store_id: int
        """

        self._store_id = store_id

    @property
    def price(self) -> float:
        """Gets the price of this ItemIphonexBody1.


        :return: The price of this ItemIphonexBody1.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this ItemIphonexBody1.


        :param price: The price of this ItemIphonexBody1.
        :type price: float
        """

        self._price = price
